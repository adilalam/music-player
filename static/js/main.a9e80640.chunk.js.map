{"version":3,"sources":["images/music-jams-logo.png","components/Landing.js","data/albums.js","components/Library.js","components/PlayerBar.js","components/Album.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","className","icon","faMusic","size","faHeadphones","faMobileAlt","title","artist","releaseInfo","albumCover","slug","songs","duration","audioSrc","Library","props","state","albums","albumData","this","map","album","index","to","key","src","alt","length","Component","PlayerBar","id","formatTime","currentTime","type","value","max","min","step","onChange","handleTimeChange","onClick","handlePrevClick","handleSongClick","isPlaying","handleNextClick","volume","handleVolumeChange","Album","find","match","params","currentSong","audioElement","document","createElement","eventListeners","timeupdate","e","setState","durationchange","volumechange","addEventListener","removeEventListener","play","pause","song","isSameSong","setSong","currentIndex","findIndex","newIndex","Math","newSong","newTime","target","newVolume","secs","mins","floor","seconds","timeString","toString","padStart","displayIndex","colSpan","App","logo","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a9e80640.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music-jams-logo.71fd11a2.png\";","import React from \"react\";\nimport \"./style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faMobileAlt,\n    faMusic,\n    faHeadphones,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Landing = () => (\n    <section className=\"landing\">\n        <div className=\"hero-image\">\n            <h1 className=\"hero-text\">Turn the music up!</h1>\n        </div>\n\n        <section className=\"selling-points\">\n            <div className=\"point\">\n                <FontAwesomeIcon icon={faMusic} size=\"5x\" className=\"icon\" />\n                <h2 className=\"point-title\">Choose your music</h2>\n                <p className=\"point-description\">\n                    The world is full of music - why should you have to listen\n                    to music someone else chose?\n                </p>\n            </div>\n            <div className=\"point\">\n                <FontAwesomeIcon\n                    className=\"icon\"\n                    icon={faHeadphones}\n                    size=\"5x\"\n                />\n                <h2 className=\"point-title\">Unlimited, streaming, ad-free</h2>\n\n                <p className=\"point-description\">\n                    No arbitrary limits. No distractions.\n                </p>\n            </div>\n            <div className=\"point\">\n                <FontAwesomeIcon\n                    className=\"icon\"\n                    icon={faMobileAlt}\n                    size=\"5x\"\n                />\n                <h2 className=\"point-title\">Mobile enabled</h2>\n                <p className=\"point-description\">\n                    Listen to your music on the go. This streaming service is\n                    available on all mobile platforms.\n                </p>\n            </div>\n        </section>\n    </section>\n);\n\nexport default Landing;\n","export default [\n    {\n        title: \"The Colors\",\n        artist: \"Pablo Picasso\",\n        releaseInfo: \"1909 Spanish Records\",\n        albumCover: \"/assets/images/album_covers/01.jpg\",\n        slug: \"the-colors\",\n        songs: [\n            {\n                title: \"Blue\",\n                duration: \"161.71\",\n                audioSrc: \"/assets/music/blue.mp3\"\n            },\n            {\n                title: \"Green\",\n                duration: \"103.96\",\n                audioSrc: \"/assets/music/green.mp3\"\n            },\n            {\n                title: \"Red\",\n                duration: \"268.45\",\n                audioSrc: \"/assets/music/red.mp3\"\n            },\n            {\n                title: \"Pink\",\n                duration: \"153.14\",\n                audioSrc: \"/assets/music/pink.mp3\"\n            },\n            {\n                title: \"Magenta\",\n                duration: \"374.22\",\n                audioSrc: \"/assets/music/magenta.mp3\"\n            }\n        ]\n    },\n    {\n        title: \"The Telephone\",\n        artist: \"Guglielmo Marconi\",\n        releaseInfo: \"1909 EM\",\n        albumCover: \"/assets/images/album_covers/02.jpg\",\n        slug: \"the-telephone\",\n        songs: [\n            {\n                title: \"Blue\",\n                duration: \"161.71\",\n                audioSrc: \"/assets/music/blue.mp3\"\n            },\n            {\n                title: \"Green\",\n                duration: \"103.96\",\n                audioSrc: \"/assets/music/green.mp3\"\n            },\n            {\n                title: \"Red\",\n                duration: \"268.45\",\n                audioSrc: \"/assets/music/red.mp3\"\n            },\n            {\n                title: \"Pink\",\n                duration: \"153.14\",\n                audioSrc: \"/assets/music/pink.mp3\"\n            },\n            {\n                title: \"Magenta\",\n                duration: \"374.22\",\n                audioSrc: \"/assets/music/magenta.mp3\"\n            }\n        ]\n    }\n];\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport albumData from \"./../data/albums\";\nimport \"./style.css\";\n\nclass Library extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { albums: albumData };\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"point-title\">Select an album</h2>\n                <section className=\"library\">\n                    {this.state.albums.map((album, index) => (\n                        <Link\n                            to={`/album/${album.slug}`}\n                            key={index}\n                            className=\"libraryItem\"\n                        >\n                            <img\n                                src={album.albumCover}\n                                alt={album.title}\n                                className=\"album-cover\"\n                            />\n                            <div>{album.title}</div>\n                            <div>{album.artist}</div>\n                            <div>{album.songs.length} songs</div>\n                        </Link>\n                    ))}\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Library;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass PlayerBar extends Component {\n    render() {\n        return (\n            <section className=\"player-bar\">\n                <section id=\"time-control\">\n                    <div className=\"current-time time\">\n                        {this.props.formatTime(this.props.currentTime)}\n                    </div>\n                    <input\n                        type=\"range\"\n                        className=\"seek-bar\"\n                        value={\n                            this.props.currentTime / this.props.duration || 0\n                        }\n                        max=\"1\"\n                        min=\"0\"\n                        step=\"0.01\"\n                        onChange={this.props.handleTimeChange}\n                    />\n                    <div className=\"total-time time\">\n                        {this.props.formatTime(this.props.duration)}\n                    </div>\n                </section>\n\n                <section id=\"buttons\">\n                    <button\n                        className=\"button seek\"\n                        id=\"previous\"\n                        onClick={this.props.handlePrevClick}\n                    >\n                        <span className=\"ion-skip-backward icon icon-seek\"></span>\n                    </button>\n                    <button\n                        id=\"play-pause\"\n                        onClick={this.props.handleSongClick}\n                        className=\"button\"\n                    >\n                        <span\n                            className={\n                                this.props.isPlaying\n                                    ? \"ion-pause icon\"\n                                    : \"ion-play icon\"\n                            }\n                        ></span>\n                    </button>\n                    <button\n                        className=\"button seek\"\n                        id=\"next\"\n                        onClick={this.props.handleNextClick}\n                    >\n                        <span className=\"ion-skip-forward icon icon-seek\"></span>\n                    </button>\n                </section>\n\n                <section id=\"volume-control\">\n                    <div className=\"icon ion-volume-low\"></div>\n                    <input\n                        type=\"range\"\n                        className=\"seek-bar\"\n                        id=\"volume-bar\"\n                        value={this.props.volume}\n                        max=\"1\"\n                        min=\"0\"\n                        step=\"0.01\"\n                        onChange={this.props.handleVolumeChange}\n                    />\n                    <div className=\"icon ion-volume-high\"></div>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default PlayerBar;\n","import React, { Component } from \"react\";\nimport albumData from \"./../data/albums\";\nimport PlayerBar from \"./PlayerBar\";\nimport \"./style.css\";\n\nclass Album extends Component {\n    constructor(props) {\n        super(props);\n\n        const album = albumData.find((album) => {\n            return album.slug === this.props.match.params.slug;\n        });\n\n        this.state = {\n            album: album,\n            currentSong: album.songs[0],\n            currentTime: 0,\n            duration: album.songs[0].duration,\n            volume: 0.75,\n            isPlaying: false,\n        };\n\n        this.audioElement = document.createElement(\"audio\");\n        this.audioElement.src = album.songs[0].audioSrc;\n    }\n\n    componentDidMount() {\n        this.eventListeners = {\n            timeupdate: (e) => {\n                this.setState({ currentTime: this.audioElement.currentTime });\n            },\n            durationchange: (e) => {\n                this.setState({ duration: this.audioElement.duration });\n            },\n            volumechange: (e) => {\n                this.setState({ volume: this.audioElement.volume });\n            },\n        };\n        this.audioElement.addEventListener(\n            \"timeupdate\",\n            this.eventListeners.timeupdate\n        );\n        this.audioElement.addEventListener(\n            \"durationchange\",\n            this.eventListeners.durationchange\n        );\n        this.audioElement.addEventListener(\n            \"volumechange\",\n            this.eventListeners.volumechange\n        );\n    }\n\n    componentWillUnmount() {\n        this.audioElement.src = null;\n        this.audioElement.removeEventListener(\n            \"timeupdate\",\n            this.eventListeners.timeupdate\n        );\n        this.audioElement.removeEventListener(\n            \"durationchange\",\n            this.eventListeners.durationchange\n        );\n        this.audioElement.removeEventListener(\n            \"volumechange\",\n            this.eventListeners.volumechange\n        );\n    }\n\n    play() {\n        this.audioElement.play();\n        this.setState({ isPlaying: true });\n    }\n\n    pause() {\n        this.audioElement.pause();\n        this.setState({ isPlaying: false });\n    }\n\n    setSong(song) {\n        this.audioElement.src = song.audioSrc;\n        this.setState({ currentSong: song });\n    }\n\n    handleSongClick(song) {\n        const isSameSong = this.state.currentSong === song;\n\n        if (this.state.isPlaying === true && isSameSong === true) {\n            this.pause();\n        } else {\n            if (!isSameSong) {\n                this.setSong(song);\n            }\n            this.play();\n        }\n    }\n\n    handlePrevClick() {\n        const currentIndex = this.state.album.songs.findIndex(\n            (song) => this.state.currentSong === song\n        );\n        const newIndex = Math.max(0, currentIndex - 1);\n        const newSong = this.state.album.songs[newIndex];\n        this.setSong(newSong);\n        this.play();\n    }\n\n    handleNextClick() {\n        const currentIndex = this.state.album.songs.findIndex(\n            (song) => this.state.currentSong === song\n        );\n        const newIndex = Math.min(\n            currentIndex + 1,\n            this.state.album.songs.length - 1\n        );\n        const newSong = this.state.album.songs[newIndex];\n        this.setSong(newSong);\n        this.play();\n    }\n\n    handleTimeChange(e) {\n        const newTime = this.audioElement.duration * e.target.value;\n        this.audioElement.currentTime = newTime;\n        this.setState({ currentTime: newTime });\n    }\n\n    handleVolumeChange(e) {\n        const newVolume = e.target.value;\n        this.audioElement.volume = newVolume;\n        this.setState({ volume: newVolume });\n    }\n\n    displayIndex(song, index) {\n        const isSameSong = this.state.currentSong === song;\n\n        if (this.state.isPlaying === true && isSameSong === false) {\n            return <span>{index + 1}</span>;\n        } else if (this.state.isPlaying === true && isSameSong === true) {\n            return <span className=\"ion-pause\"></span>;\n        } else if (this.state.isPlaying === false && isSameSong === true) {\n            return <span className=\"ion-play\"></span>;\n        } else {\n            return <span>{index + 1}</span>;\n        }\n    }\n\n    formatTime(secs) {\n        let mins = Math.floor(secs / 60);\n        let seconds = Math.floor(secs - mins * 60);\n\n        let timeString =\n            mins.toString().padStart(2, \"0\") +\n            \":\" +\n            seconds.toString().padStart(2, \"0\");\n\n        return timeString ? timeString : \"0:00\";\n    }\n\n    render() {\n        return (\n            <section className=\"album\">\n                <div id=\"album-organize\">\n                    <section id=\"album-image\">\n                        <img\n                            id=\"album-cover-art\"\n                            src={this.state.album.albumCover}\n                            alt=\"album cover art\"\n                        />\n                    </section>\n                    <div id=\"right-side\">\n                        <div className=\"album-details\">\n                            <h1 id=\"album-title\">{this.state.album.title}</h1>\n                            <h2 className=\"artist\">\n                                {this.state.album.artist}\n                            </h2>\n                            <div id=\"release-info\">\n                                {this.state.album.releaseInfo}\n                            </div>\n                        </div>\n\n                        <table id=\"song-list\">\n                            <colgroup>\n                                <col id=\"song-number-column\" />\n                                <col id=\"song-title-column\" />\n                                <col id=\"song-duration-column\" />\n                            </colgroup>\n                            <tbody>\n                                {this.state.album.songs.map((song, index) => (\n                                    <tr\n                                        key={index}\n                                        className=\"song\"\n                                        onClick={() =>\n                                            this.handleSongClick(song)\n                                        }\n                                    >\n                                        <td>\n                                            {this.displayIndex(song, index)}\n                                        </td>\n                                        <td id=\"song-title\" colSpan=\"3\">\n                                            {song.title}\n                                        </td>\n                                        <td>\n                                            {this.formatTime(song.duration)}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <PlayerBar\n                    isPlaying={this.state.isPlaying}\n                    currentSong={this.state.currentSong}\n                    currentTime={this.state.currentTime}\n                    duration={this.state.duration}\n                    volume={this.state.volume}\n                    handleSongClick={() =>\n                        this.handleSongClick(this.state.currentSong)\n                    }\n                    handlePrevClick={() => this.handlePrevClick()}\n                    handleNextClick={() => this.handleNextClick()}\n                    handleTimeChange={(e) => this.handleTimeChange(e)}\n                    handleVolumeChange={(e) => this.handleVolumeChange(e)}\n                    formatTime={(e) => this.formatTime(e)}\n                />\n            </section>\n        );\n    }\n}\n\nexport default Album;\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Landing from \"./components/Landing\";\nimport Library from \"./components/Library\";\nimport Album from \"./components/Album\";\nimport \"./components/style.css\";\nimport logo from \"./images/music-jams-logo.png\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header>\n                <nav>\n                    <img src={logo} className=\"logo\" />\n                    <div className=\"links\">\n                        <Link to=\"/\" className=\"link\">\n                            Landing\n                        </Link>\n                        <Link to=\"/library\" className=\"link\">\n                            Library\n                        </Link>\n                    </div>\n                </nav>\n            </header>\n            <main>\n                <Route exact path=\"/\" component={Landing} />\n                <Route path=\"/library\" component={Library} />\n                <Route path=\"/album/:slug\" component={Album} />\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}